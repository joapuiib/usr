#!/bin/bash 

# ------------------------------------
# Git alias and function
# ------------------------------------

alias gcl="git clone"
complete -F _complete_alias gcl

alias gs="git status"
complete -F _complete_alias gs

alias gp="git push"
complete -F _complete_alias gp

alias gpt="git push --tags"
complete -F _complete_alias gpt

alias gfp="git ftp push"
complete -F _complete_alias gp

alias gpa="git push --all"
complete -F _complete_alias gpa

alias gpl="git pull"
complete -F _complete_alias gpl

alias ga="git add"
complete -F _complete_alias ga

alias gc="git commit"
complete -F _complete_alias gc

alias gca="git commit -a"
complete -F _complete_alias gc

alias gcam="git commit --amend --no-edit"
complete -F _complete_alias gcam

alias gd="git diff"
complete -F _complete_alias gd

alias gds="git diff --staged"
complete -F _complete_alias gd

alias gch="git checkout"
complete -F _complete_alias gch

alias gsw="git show"
complete -F _complete_alias gsw

alias gl="git lg"
complete -F _complete_alias gl

alias gl2="git lg2"
complete -F _complete_alias gl2

alias gme="git merge"
complete -F _complete_alias gme

alias grb="git rebase"
complete -F _complete_alias grb

alias gr="git restore"
complete -F _complete_alias gr

alias grs="git restore --staged"
complete -F _complete_alias grs

gla() {
    ARGS="$@"
    if git cat-file -t origin/gh-pages &>/dev/null
    then
        ARGS="$ARGS --not origin/gh-pages"
    fi
    git lg --all $ARGS
}

# Show all git related aliases
galias() { alias | grep 'git' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

GREEN='\033[0;32m'
RED='\033[0;31m'
RESET='\033[0m'

declare -A repos
repos=()

repos+=(["itb"]="$itb")
repos+=(["docencia"]="$HOME/docencia")
repos+=(["grade"]="$HOME/grade")
repos+=(["jutge"]="$HOME/python/jutge")
repos+=(["gitjudge"]="$HOME/python/gitjudge")
repos+=(["usr"]="$HOME/usr")
repos+=(["mkdocs-material-joapuiib"]="$HOME/mkdocs/mkdocs-material-joapuiib")
repos+=(["curs-git"]="$HOME/mkdocs/curs-git")
repos+=(["daw-ed"]="$HOME/mkdocs/daw-ed")
repos+=(["dam-psp"]="$HOME/mkdocs/dam-psp")
repos+=(["bd"]="$HOME/mkdocs/dam-bd")
repos+=(["smx-si"]="$HOME/mkdocs/smx-si")
repos+=(["iabd-saa"]="$HOME/mkdocs/iabd-saa")
repos+=(["fp"]="$HOME/mkdocs/fp")

for repo in ${!repos[@]}; do
    repo_path=${repos[$repo]}
    alias "cd$repo"="cd $repo_path"
done

_check_repository() {
    if [ -d "$2" ]; then
        if git -C $2 diff --quiet ; then
            echo -e "$1 ($2): ${GREEN}clean${RESET}"
        else
            echo -e "$1 ($2): ${RED}dirty${RESET}"
        fi
    else
        echo -e "$1 ($2): ${RED}not found${RESET}"
    fi
}

_check_status() {
    for repo in ${!repos[@]}; do
        repo_path=${repos[$repo]}
        _check_repository $repo $repo_path
    done
}

_pull_repository() {
    if [ -d "$2" ]; then
        echo -e "${GREEN}pulling $1: ($2) ${RESET}"
        # git -C $2 checkout master
        git -C $2 pull -f --tags --all
    else 
        echo -e "$1 ($2): ${RED}not found${RESET}"
    fi
}
_pull_repositories() {
    for repo in ${!repos[@]}; do
        repo_path=${repos[$repo]}
        _pull_repository $repo $repo_path
    done
}

alias status=_check_status
alias pull=_pull_repositories
